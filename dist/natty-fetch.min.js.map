{"version":3,"file":null,"sources":["../src/util.js","../src/ajax.js","../src/jsonp.js","../src/event.js","../src/request.js","../src/defer.js","../src/plugin.loop.js","../src/plugin.soon.js","../src/default-global-config.js","../src/natty-fetch.js"],"sourcesContent":["export const hasWindow = 'undefined' !== typeof window\nexport const hasConsole = 'undefined' !== typeof console\nexport const doc = hasWindow ? document : null\nexport const escape = encodeURIComponent\nexport const NULL = null\nexport const TRUE = true\nexport const FALSE = !TRUE\nexport const UNDEFINED = 'undefined'\nexport const EMPTY = ''\n\nconst toString = Object.prototype.toString\nconst ARRAY_TYPE = '[object Array]'\nconst OBJECT_TYPE = '[object Object]'\n\n/**\n * 伪造的`promise`对象\n * NOTE 伪造的promise对象要支持链式调用 保证和`new Promise`返回的对象行为一致\n *    dummyPromise.then().catch().finally()\n */\nexport const dummyPromise = {\n  dummy: TRUE,\n}\n\ndummyPromise.then = dummyPromise['catch'] = () => {\n  // NOTE 这里用了剪头函数 不能用`return this`\n  return dummyPromise\n}\n\n/**\n * 判断是否是IE8~11, 不包含Edge\n * @returns {boolean}\n * @note IE11下 window.ActiveXObject的值很怪异, 所以需要追加 'ActiveXObject' in window 来判断\n */\nexport const isIE = hasWindow && (!!window.ActiveXObject || 'ActiveXObject' in window)\n\nexport function noop(v) {\n  return v\n}\n\n/**\n * 变换两个参数的函数到多个参数\n * @param  {Function} fn 基函数\n * @return {Function} 变换后的函数\n * @demo\n *    function add(x, y) { return x+y; }\n *    add = redo(add);\n *    add(1,2,3) => 6\n */\nexport function redo(fn) {\n  return function () {\n    const args = arguments\n    let ret = fn(args[0], args[1])\n    for (let i = 2, l = args.length; i < l; i++) {\n      ret = fn(ret, args[i])\n    }\n    return ret\n  }\n}\n// const random = Math.random\n// const floor = Math.floor\n// export function makeRandom() {\n//   return floor(random() * 9e9)\n// }\n\nconst absoluteUrlReg = /^(https?:)?\\/\\//\nexport function isAbsoluteUrl(url) {\n  return !!url.match(absoluteUrlReg)\n}\n\nconst relativeUrlReg = /^[\\.\\/]/\nexport function isRelativeUrl(url) {\n  return !!url.match(relativeUrlReg)\n}\n\nconst BOOLEAN = 'boolean'\nexport function isBoolean(v) {\n  return typeof v === BOOLEAN\n}\n\nconst STRING = 'string'\nexport function isString(v) {\n  return typeof v === STRING\n}\n\nconst FUNCTION = 'function'\nexport function isFunction(v) {\n  return typeof v === FUNCTION\n}\n\nexport function runAsFn(v) {\n  return isFunction(v) ? v() : v\n}\n\nconst NUMBER = 'number'\nexport function isNumber(v) {\n  return !isNaN(v) && typeof v === NUMBER\n}\n\nconst OBJECT = 'object'\nexport function isObject(v) {\n  return typeof v === OBJECT && v !== NULL\n}\n\nexport function isWindow(v) {\n  return v !== NULL && v === v.window\n}\n\n// 参考了zepto\nexport function isPlainObject(v) {\n  return v !== NULL && isObject(v) && !isWindow(v) && Object.getPrototypeOf(v) === Object.prototype\n}\n\nexport function isEmptyObject(v) {\n  let count = 0\n  for (let i in v) {\n    if (v.hasOwnProperty(i)) {\n      count++\n    }\n  }\n  return count === 0\n}\n\nexport function isArray(v) {\n  return toString.call(v) === ARRAY_TYPE\n}\n\n/**\n * 判断是否跨域\n * @type {Element}\n * @note 需要特别关注IE8~11的行为是不一样的!!!\n */\nlet originA\nif(doc) {\n  originA = doc.createElement('a')\n  originA.href = location.href\n}\nexport function isCrossDomain(url) {\n\n  let requestA = doc.createElement('a')\n  requestA.href = url\n\n  // 如果`url`的值不包含`protocol`和`host`(比如相对路径), 在标准浏览器下, 会自定补全`requestA`对象的`protocal`和`host`属性.\n  // 但在IE8~11下, 不会自动补全. 即`requestA.protocol`和`requestA.host`的值都是空的.\n  // 在IE11的不同小版本下, requestA.protocol的值有的是`:`, 有的是空字符串, 太奇葩啦!\n  if (__FALLBACK__) {\n    if (isIE && (requestA.protocol === ':' || requestA.protocol === '')) {\n      if (requestA.hostname === '') {\n        //alert(0)\n        return false\n      } else {\n        //alert('1:'+(originA.hostname !== requestA.hostname || originA.port !== requestA.port))\n        return originA.hostname !== requestA.hostname || originA.port !== requestA.port\n      }\n    }\n  }\n\n  // 标准浏览器\n  return originA.hostname !== requestA.hostname || originA.port !== requestA.port || originA.protocol !== requestA.protocol\n}\n\n/**\n * 对象扩展\n * @param  {Object} receiver\n * @param  {Object} supplier\n * @return {Object} 扩展后的receiver对象\n * @note 这个extend方法是定制的, 不要拷贝到其他地方用!!!\n * @note 这个extend方法是深拷贝方式的!!!\n */\nfunction _extend(receiver = {}, supplier = {}, deepCopy = FALSE) {\n  for (let key in supplier) {\n    // `supplier`中不是未定义的键 都可以执行扩展\n    if (supplier.hasOwnProperty(key) && supplier[key] !== undefined) {\n      if (deepCopy === TRUE) {\n        if (isArray(supplier[key])) {\n          receiver[key] = [].concat(supplier[key])\n        } else if (isPlainObject(supplier[key])) {\n          receiver[key] = extend({}, supplier[key])\n        } else {\n          receiver[key] = supplier[key]\n        }\n      } else {\n        receiver[key] = supplier[key]\n      }\n    }\n  }\n  return receiver\n}\n/**\n * FormData对象合并\n * @param  {FormData || Object} fd1\n * @param  {FormData || Object} fd2\n * @return {FormData} 合并后的FormData\n */\nfunction _fdAssign(fd1 = {}, fd2 = {}) {\n  var formData = new FormData;\n  var loop = function(fd) {\n    if(fd.constructor === FormData) {\n      var iterator = fd.entries();\n      var s = iterator.next();\n      while(!s.done) {\n        formData.set(s.value[0], s.value[1]);\n        s = iterator.next();\n      };\n    }else {\n      for(var key in fd) {\n        formData.set(key, fd[key]);\n      }\n    }\n  };\n  loop(fd1);\n  loop(fd2);\n  return formData;\n}\nconst extend = redo(_extend);\nconst fdAssign = redo(_fdAssign);\nexport {extend, fdAssign}\n\n// export function likeArray(v) {\n//   if (!v) {\n//     return false\n//   }\n//   return typeof v.length === NUMBER\n// }\n\n/**\n *\n * @param v {Array|Object} 遍历目标对象\n * @param fn {Function} 遍历器 会被传入两个参数, 分别是`value`和`key`\n */\nexport function each(v, fn) {\n  let i, l\n  if (isArray(v)) {\n    for (i = 0, l = v.length; i < l; i++) {\n      if (fn.call(v[i], v[i], i) === false) return\n    }\n  } else {\n    for (i in v) {\n      if (fn.call(v[i], v[i], i) === false) return\n    }\n  }\n}\n\n/**\n * 将对象的`键`排序后 返回一个新对象\n *\n * @param obj {Object} 被操作的对象\n * @returns {Object} 返回的新对象\n * @case 这个函数用于对比两次请求的参数是否一致\n */\nexport function sortPlainObjectKey(obj) {\n  let clone = {}\n  let key\n  let keyArray = []\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      keyArray.push(key)\n      if (isPlainObject(obj[key])) {\n        obj[key] = sortPlainObjectKey(obj[key])\n      }\n    }\n  }\n  keyArray.sort()\n  for (let i=0, l=keyArray.length; i<l; i++) {\n    clone[keyArray[i]] = obj[keyArray[i]]\n  }\n  return clone\n}\n\nexport function serialize(params, obj, traditional, scope) {\n  let type, array = isArray(obj), hash = isPlainObject(obj)\n  each(obj, function(value, key) {\n    type = toString.call(value)\n    if (scope) {\n      key = traditional ? scope : scope + '[' + (hash || type === OBJECT_TYPE || type === ARRAY_TYPE ? key : '') + ']'\n    }\n\n    // 递归\n    if (!scope && array) {\n      params.add(value.name, value.value)\n    }\n    // recurse into nested objects\n    else if (type == ARRAY_TYPE || (!traditional && type == OBJECT_TYPE)) {\n      serialize(params, value, traditional, key)\n    } else {\n      params.add(key, value)\n    }\n  })\n}\n\n/**\n * 功能和`Zepto.param`一样\n * @param obj {Object}\n * @param traditional {Boolean}\n * @returns {string}\n * $.param({ foo: { one: 1, two: 2 }}) // \"foo[one]=1&foo[two]=2)\"\n * $.param({ ids: [1,2,3] })       // \"ids[]=1&ids[]=2&ids[]=3\"\n * $.param({ ids: [1,2,3] }, true)   // \"ids=1&ids=2&ids=3\"\n * $.param({ foo: 'bar', nested: { will: 'not be ignored' }})  // \"foo=bar&nested[will]=not+be+ignored\"\n * $.param({ foo: 'bar', nested: { will: 'be ignored' }}, true)  // \"foo=bar&nested=[object+Object]\"\n * $.param({ id: function(){ return 1 + 2 } })  // \"id=3\"\n */\nexport function param(obj, traditional) {\n  var params = []\n  params.add = (key, value) => {\n    if (isFunction(value)) value = value()\n    if (value == NULL) value = ''\n    params.push(escape(key) + '=' + escape(value))\n  }\n  serialize(params, obj, traditional)\n  return params.join('&').replace(/%20/g, '+')\n}\n\nexport function decodeParam(str) {\n  return decodeURIComponent(str.replace(/\\+/g, ' '))\n}\n\n// 给URL追加查询字符串\nexport function appendQueryString(url, obj, urlStamp, traditional) {\n  // 是否添加时间戳\n  if (urlStamp) {\n    obj[isBoolean(urlStamp) ? '_stamp' : urlStamp] = +new Date()\n  }\n  let queryString = param(obj, traditional)\n\n  if (queryString) {\n    return url + (~url.indexOf('?') ? '&' : '?') + queryString\n  } else {\n    return url\n  }\n}\n\n// 随机字符串字符集\nconst chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678'\n\n// 创建随机字符串\nexport function makeRandom(n = 6) {\n  let str = ''\n  for (let i = 0; i < n; i++) {\n    str += chars.charAt(Math.floor(Math.random() * chars.length))\n  }\n  return str\n}\n\nexport function makeMessage(str, obj, log = false) {\n  log && hasConsole && console.log(str + '\\n' + JSON.stringify(obj, null, 2))\n  return str\n}","import {\n  extend, appendQueryString, noop, isCrossDomain, isBoolean, param,\n  TRUE, FALSE, NULL, UNDEFINED,\n} from './util'\n\nconst supportCORS = UNDEFINED !== typeof XMLHttpRequest && 'withCredentials' in (new XMLHttpRequest())\nconst GET = 'GET'\nconst SCRIPT = 'script'\nconst XML = 'xml'\nconst JS0N = 'json' // NOTE 不能使用`JSON`，这里用数字零`0`代替了字母`O`\n\n// minetype的简写映射\n// TODO 考虑是否优化\nconst acceptToRequestHeader = {\n  // IIS returns `application/x-javascript` 但应该不需要支持\n  '*':  '*/' + '*',\n  script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript',\n  json:   'application/json, text/json',\n  xml:  'application/xml, text/xml',\n  html:   'text/html',\n  text:   'text/plain',\n}\n\n// 设置请求头\n// 没有处理的事情：跨域时使用者传入的多余的Header没有屏蔽 没必要\nconst setHeaders = (xhr, options) => {\n\n  const header = {\n    Accept: acceptToRequestHeader[options.accept],\n  }\n\n  // 如果没有跨域 则打该标识 业界通用做法\n  if (!isCrossDomain(options.url)) {\n    header['X-Requested-With'] = 'XMLHttpRequest'\n  }\n\n  // 如果POST方法，没有明确指定编码方式，默认urlencoded，\n  // TODO v3.x将去掉改处理！！！需要文档强调\n  if (!options.fd && options.method === 'POST' && !header['Content-Type']) {\n    header['Content-Type'] = 'application/x-www-form-urlencoded'\n  }\n\n  extend(header, options.header)\n\n  for (let key in header) {\n    xhr.setRequestHeader(key, header[key])\n  }\n\n  return header\n}\n\n// 绑定事件\n// NOTE 还得继续使用readystatechange事件\n//    比较遗憾 到现在了依然不能安全的使用load和error等事件 就连PC端的chrome都有下面的问题\n//    500: 触发load loadend 不触发error\n//    404: 触发load loadend 不触发error\nconst setEvents = (xhr, options) => {\n\n  // 再高级的浏览器都有低级错误! 已经不能在相信了!\n  // MAC OSX Yosemite Safari上的低级错误: 一次`ajax`请求的`loadend`事件完成之后,\n  // 如果执行`xhr.abort()`, 居然还能触发一遍`abort`和`loadend`事件!!!\n  // `_finished`标识一次完整的请求是否结束, 如果已结束, 则不再触发任何事件\n  xhr._finished = FALSE\n\n  const readyStateChangeFn = () => {\n    // console.log('xhr.status', xhr.status)\n    if (xhr._finished) {\n      return\n    }\n    //console.log('xhr.readyState', xhr.readyState, 'xhr.status', xhr.status, xhr)\n    if (xhr.readyState === 4) {\n      // 如果请求被取消(aborted) 则`xhr.status`会是0 所以不会进入`success`回调\n      if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304) {\n        //let mime = xhr.getResponseHeader('Content-Type')\n        let data = xhr.responseText\n        switch (options.accept) {\n          case JS0N:\n            try {\n              data = JSON.parse(data)\n            } catch (e) {\n              console.warn('The response can NOT be parsed to JSON object.', data)\n            }\n            break\n          case SCRIPT:\n            (1, eval)(data)\n            break\n          case XML:\n            data = xhr.responseXML\n            break\n          //case HTML:\n          //case TEXT:\n          default:\n            break\n        }\n        options.success(data, xhr)\n      } else {\n        // 因为取消时会先触发原生的`onreadystatechange`响应，后触发`onAbort`回调，所以\n        // 如果请求被取消(aborted) 则`xhr.status`会是0 程序走到这里的时候，`xhr._aborted`状态是false，\n        // 需要排除，不应该触发`error`回调\n        !xhr._aborted && options.error(xhr.status, xhr)\n      }\n    }\n  }\n\n  // readyState value:\n  //   0: UNSET 未初始化\n  //   1: OPENED\n  //   2: HEADERS_RECEIVED\n  //   3: LOADING\n  //   4: DONE 此时触发load事件\n  xhr.addEventListener(\"readystatechange\", readyStateChangeFn)\n\n  const abortFn = () => {\n    if (xhr._finished) {\n      return\n    }\n    options.abort(xhr.status, xhr)\n  }\n\n  xhr.addEventListener('abort', abortFn)\n\n  const loadedFn = () => {\n    if (xhr._finished) {\n      return\n    }\n    xhr._finished = true\n    options.complete(xhr.status, xhr)\n    delete xhr._aborted\n  }\n\n  xhr.addEventListener('loadend', loadedFn)\n}\n\nconst defaultOptions = {\n  url: '',\n  mark: {},\n  urlMark: TRUE,\n  method: GET,\n  accept: '*',\n  data: NULL,\n  header: {},\n  withCredentials: NULL, // 根据`url`是否跨域决定默认值. 如果显式配置该值(必须是布尔值), 则个使用配置值\n  urlStamp: TRUE,\n  success: noop,\n  error: noop,\n  complete: noop,\n  abort: noop,\n  query: {},\n  log: FALSE,\n  traditional: FALSE,\n}\n\nexport default function ajax(options) {\n\n  options = extend({}, defaultOptions, options)\n\n  // 是否跨域\n  let isCD = isCrossDomain(options.url)\n\n  let xhr = new XMLHttpRequest()\n\n  setEvents(xhr, options)\n\n  xhr.open(options.method, appendQueryString(\n    options.url,\n    extend({}, options.urlMark ? options.mark : {}, options.method === GET ? options.data : {}, options.query),\n    options.urlStamp,\n    options.traditional\n  ))\n\n  // NOTE 生产环境的Server端, `Access-Control-Allow-Origin`的值一定不要配置成`*`!!! 而且`Access-Control-Allow-Credentials`应该是true!!!\n  // NOTE 如果Server端的`responseHeader`配置了`Access-Control-Allow-Origin`的值是通配符`*` 则前端`withCredentials`是不能使用true值的\n  // NOTE 如果Client端`withCredentials`使用了true值 则后端`responseHeader`中必须配置`Access-Control-Allow-Credentials`是true\n  xhr.withCredentials = isBoolean(options.withCredentials) ? options.withCredentials : isCD\n\n  // 设置requestHeader\n  const header = setHeaders(xhr, options)\n\n  let data;\n\n  if(options.data.constructor === FormData) {\n    data = options.data\n  }else if (header['Content-Type'] && ~header['Content-Type'].indexOf('application/x-www-form-urlencoded')) {\n    data = param(options.data, options.traditional)\n  } else {\n    data = JSON.stringify(options.data)\n  }\n\n  // 文档建议说 send方法如果不发送请求体数据 则null参数在某些浏览器上是必须的\n  xhr.send(options.method === GET ? NULL : data === NULL ? NULL : data)\n\n  let originAbort = xhr.abort\n\n  // 重写`abort`方法\n  xhr.abort = () => {\n    xhr._aborted = true\n    // NOTE 直接调用`originAbort()`时 浏览器会报 `Illegal invocation` 错误\n    originAbort.call(xhr)\n  }\n\n  return xhr\n}\n\n// 移动端不需要fallback\najax.fallback = false\najax.supportCORS = supportCORS","import {appendQueryString, noop, extend, makeRandom, hasWindow, NULL, TRUE, FALSE} from './util'\nconst win = hasWindow ? window : NULL\nconst doc = hasWindow ? document : NULL\nconst SCRIPT = 'script'\n\nconst removeScript = script => {\n  script.onerror = NULL\n  script.parentNode.removeChild(script)\n  script = NULL\n}\nlet head = NULL\nconst insertScript = (url, options) => {\n  let script = doc.createElement(SCRIPT)\n  script.src = url\n  script.async = true\n\n  if (options.crossOrigin) {\n    script.crossOrigin = true\n  }\n\n  script.onerror = e => {\n    win[options.callbackName] = NULL\n    options.error(e)\n    options.complete()\n  }\n\n  head = head || doc.getElementsByTagName('head')[0]\n  head.insertBefore(script, head.firstChild)\n  return script\n}\n\nconst defaultOptions = {\n  url: '',\n  mark: {},\n  urlMark: TRUE,\n  data: {},\n  urlStamp: TRUE,\n  success: noop,\n  error: noop,\n  complete: noop,\n  log: FALSE,\n  flag: 'callback',\n  callbackName: 'jsonp{id}',\n  traditional: FALSE,\n  crossOrigin: FALSE,\n}\n\nexport default function jsonp(options) {\n\n  options = extend({}, defaultOptions, options)\n\n  const callbackName = options.callbackName = options.callbackName.replace(/\\{id\\}/, makeRandom(6))\n\n  const originComplete = options.complete\n\n  let script\n\n  // 二次包装的`complete`回调\n  options.complete = () => {\n    // 删除脚本\n    removeScript(script)\n    originComplete()\n  }\n\n  // 成功回调\n  win[callbackName] = data => {\n    // JSONP函数需要立即删除 用于`IE8`判断是否触发`onerror`\n    win[callbackName] = NULL\n    options.success(data)\n    options.complete()\n  }\n\n  // 生成`url`\n  let url = appendQueryString(\n    options.url,\n    extend({[options.flag]: callbackName}, options.urlMark ? options.mark : {}, options.data),\n    options.urlStamp,\n    options.traditional\n  )\n\n  // 插入脚本\n  script = insertScript(url, options)\n  \n  return {\n    abort() {\n      // 覆盖成功回调为无数据处理版本\n      win[callbackName] = () => {\n        win[callbackName] = NULL\n      }\n      removeScript(script)\n    },\n  }\n}\n","const PREFIX = '_'\nfunction rename (type) {\n  return PREFIX + type\n}\n\nexport default {\n  on: function () {\n    const args = arguments\n    if (typeof args[0] === 'string' && typeof args[1] === 'function') {\n      const type = rename(args[0])\n      this[type]  = this[type] || []\n      this[type].push(args[1])\n    } else if (typeof args[0] === 'object') {\n      const hash = args[0]\n      for (let i in hash) {\n        if (hash.hasOwnProperty(i)) {\n          this.on(i, hash[i])\n        }\n      }\n    }\n  },\n  off: function (type, fn) {\n    type = rename(type)\n    if (!fn) {\n      delete this[type]\n    } else {\n      const fns = this[type]\n      fns.splice(fns.indexOf(fn), 1)\n      if (!this[type].length) {\n        delete this[type]\n      }\n    }\n  },\n  // @param {array} args\n  fire: function (type, args, context) {\n    const fns = this[rename(type)]\n    if (!fns) return 'NO_EVENT'\n    for (let i=0, l=fns.length; i<l; i++) {\n      fns[i].apply(context || this, [].concat(args))\n    }\n  },\n  hasEvent: function (type) {\n    return !!this[rename(type)]\n  },\n}","import {extend, NULL, TRUE, FALSE, isAbsoluteUrl, isRelativeUrl, EMPTY, makeRandom, makeMessage} from './util'\nimport ajax from './__AJAX__'\nimport jsonp from './__JSONP__'\n\nexport default class Request {\n  constructor(apiInstance) {\n    const {_path, config, api, contextId} = apiInstance\n\n    this._apiInstance = apiInstance\n\n    // 单次请求实例的id，用于从`api`实例的`_pendingList`中删除请求实例\n    this._rid = [contextId, _path, makeRandom(6)].join('-')\n\n    this._path = _path\n    this.config = config\n    this.storage = api.storage\n    this.contextId = contextId\n\n    // 工作状态\n    this.pending = FALSE\n    this._requester = NULL\n  }\n\n  // 发起网络请求 返回一个Promise实例\n  send({vars, onSuccess, onError, onComplete}) {\n\n    this.vars = vars\n\n    this.onSuccess = onSuccess\n    this.onError = onError\n    this.onComplete = onComplete\n\n    const {config} = this\n\n    // 调用 willFetch 钩子\n    config.willFetch(vars, config, 'remote')\n\n    // 等待状态在此处开启 在相应的`requester`的`complete`回调中关闭\n    this.pending = TRUE\n\n    // 创建请求实例requester\n    if (config.customRequest) {\n      // 使用私有的request方法\n      this._requester = config.customRequest(vars, config, (isSuccess, response) => {\n        // 当isSuccess为false时，response的结构应该是 {message: 'xxx'}\n        isSuccess ? this.processResponse(response) : this.onError(response)\n      })\n    } else if (config.jsonp) {\n      this._requester = this.jsonp()\n    } else {\n      this._requester = this.ajax()\n    }\n\n    vars.requester = this._requester\n\n    // 超时处理\n    if (0 !== config.timeout) {\n      setTimeout(() => {\n        if (this.pending) {\n          // 取消请求\n          this.abort()\n\n          const error = {\n            timeout: TRUE,\n            message: makeMessage('Request Timeout', {\n              context: this.contextId,\n              api: `${vars.api}`,\n              timeout: config.timeout + 'ms',\n            }, config.log),\n          }\n\n          this.onError(error)\n        }\n      }, config.timeout)\n    }\n  }\n\n  // 处理结构化的响应数据\n  processResponse(response) {\n    const {config, vars} = this\n    // 调用 didFetch 钩子函数\n    config.didFetch(vars, config)\n\n    // 非标准格式数据的预处理\n    response = config.fit(response, vars)\n\n    if (response.success) {\n      // 数据处理\n      const content = config.process(response.content, vars)\n      this.onSuccess(content)\n    } else {\n      const error = extend({\n        message: 'Error in request: ' + this._path,\n      }, response.error)\n      // NOTE response是只读的对象!!!\n      this.onError(error)\n    }\n  }\n\n  // 获取正式接口的完整`url`\n  // @param config {Object}\n  getFinalUrl() {\n    const {config, vars} = this\n    let url = config.mock ? config.mockUrl : config.url\n    if (!url) return EMPTY\n    const prefixKey = config.mock ? 'mockUrlPrefix' : 'urlPrefix'\n    const suffixKey = config.mock ? 'mockUrlSuffix' : 'urlSuffix'\n    const prefix = config[prefixKey] && !isAbsoluteUrl(url) && !isRelativeUrl(url) ? config[prefixKey] : EMPTY\n    const suffix = config[suffixKey] ? config[suffixKey]: EMPTY\n\n    url = prefix + url + suffix\n\n    // 如果是RESTFul API，填充所有的':x'参数\n    if (config.rest) {\n      const restData = vars.data\n      for (let param in restData) {\n        if (restData.hasOwnProperty(param) && ~param.indexOf(':')) {\n          url = url.replace(new RegExp('\\\\/' + param), '/' + restData[param])\n          delete restData[param]\n        }\n      }\n    }\n\n    return url\n  }\n\n  // 发起Ajax请求\n  // @returns {Object} xhr对象实例\n  ajax() {\n    const {config, vars} = this\n\n    const url = this.getFinalUrl()\n\n    return ajax({\n      traditional: config.traditional,\n      urlStamp: config.urlStamp,\n      mark: vars.mark,\n      urlMark: config.urlMark,\n      log: config.log,\n      url: url,\n      fd: config.fd,\n      method: config.method,\n      data: vars.data,\n      header: config.header,\n      query: config.query,\n      withCredentials: config.withCredentials,\n      // 强制约定json\n      accept: 'json',\n      success: response => {\n        this.processResponse(response)\n      },\n      error: status => {\n        // 如果跨域使用了自定义的header，且服务端没有配置允许对应的header，此处status为0，目前无法处理。\n        const error = {\n          status,\n          message: makeMessage(`Request Error(Status: ${status})`, {\n            status: status,\n            context: this.contextId,\n            api: vars.api,\n            url: url,\n          }, config.log),\n        }\n        this.onError(error)\n      },\n      complete: () => {\n        this.onComplete()\n        this.pending = FALSE\n        this._requester = NULL\n      },\n    })\n  }\n\n  // 发起jsonp请求\n  // @returns {Object} 带有abort方法的对象\n  jsonp() {\n    const {config, vars} = this\n\n    const url = this.getFinalUrl()\n\n    return jsonp({\n      traditional: config.traditional,\n      log: config.log,\n      mark: vars.mark,\n      urlMark: config.urlMark,\n      url: url,\n      data: vars.data,\n      urlStamp: config.urlStamp,\n      flag: config.jsonpFlag,\n      callbackName: config.jsonpCallbackName,\n      crossOrigin: config.jsonpCrossOrigin,\n      success: response => {\n        this.processResponse(response)\n      },\n      error: () => {\n        const error = {\n          message: makeMessage('Request Error(Not Accessable JSONP)', {\n            context: this.contextId,\n            api: vars.api,\n            url: url,\n          }, config.log),\n        }\n        this.onError(error)\n      },\n      complete: () => {\n        this.onComplete()\n        this.pending = FALSE\n        this._requester = NULL\n      },\n    })\n  }\n\n  // 取消请求\n  abort() {\n    if (this._requester) {\n      this._requester.abort()\n    }\n  }\n}","export default class Defer {\n  constructor(Promise) {\n    const t = this\n    t.promise = new Promise(function (resolve, reject) {\n      t._resolve = resolve\n      t._reject = reject\n    })\n  }\n\n  resolve(value) {\n    this._resolve.call(this.promise, value)\n  }\n\n  reject(reason) {\n    this._reject.call(this.promise, reason)\n  }\n}","import {isNumber, noop, TRUE, FALSE, NULL} from './util'\n\n/**\n * 创建轮询支持\n * @param api {Function} 需要轮询的函数\n */\nexport default function() {\n  const {api} = this\n\n  api.loop = (options, resolveFn = noop, rejectFn = noop) => {\n    if (!options.duration || !isNumber(options.duration)) {\n      throw new Error('Illegal `duration` value for `startLoop` method.')\n    }\n\n    let loopTimer = NULL\n\n    let stop = () => {\n      clearTimeout(loopTimer)\n      loopTimer = NULL\n      stop.looping = FALSE\n    }\n\n    let sleepAndRequest = () => {\n      stop.looping = TRUE\n      api(options.data).then(resolveFn, rejectFn)\n      loopTimer = setTimeout(() => {\n        sleepAndRequest()\n      }, options.duration)\n    }\n\n    sleepAndRequest()\n    \n    return stop\n  }\n}\n","import {noop, FALSE, TRUE, hasConsole} from './util'\n\nexport default function() {\n  const {api} = this\n  api.soon = (data, successFn = noop, errorFn = noop) => {\n    const vars = this.makeVars(data)\n\n    // 先尝试用`storage`数据快速响应\n    if (api.storageUseable) {\n\n      const result = api.storage.has(vars.queryString)\n\n      if (result.has) {\n        successFn({\n          fromStorage: TRUE,\n          content: result.value,\n        })\n      }\n    }\n\n    // 再发起网络请求(内部会更新`storage`)\n    this.send(vars).then(content => {\n      successFn({\n        fromStorage: FALSE,\n        content,\n      })\n    }, error => {\n      errorFn(error)\n    })['catch'](function (e) {\n      hasConsole && console.error(e)\n    })\n  }\n}","import {noop, NULL, TRUE, FALSE, EMPTY, hasWindow} from './util'\n\nconst config = {\n\n  // 默认参数\n  data: {},\n\n  // 请求完成钩子函数\n  didFetch: noop,\n\n  // 预处理回调\n  fit: noop,\n\n  // 自定义header, 只针对非跨域的ajax有效, 跨域时将忽略自定义header\n  header: {},\n\n  // 是否忽律接口自身的并发请求\n  ignoreSelfConcurrent: FALSE,\n\n  // 有两种格式配置`jsonp`的值\n  // {Boolean}\n  // {Array} eg: [TRUE, 'cb', 'j{id}']\n  jsonp: FALSE,\n\n  // 是否在`jsonp`的`script`的标签上加`crossorigin`属性\n  jsonpCrossOrigin: FALSE,\n\n  // 是否开启log信息\n  log: FALSE,\n\n  // 非GET方式对JSONP无效\n  method: 'GET',\n\n  // 是否开启mock模式\n  mock: FALSE,\n\n  mockUrl: EMPTY,\n\n  // 全局`mockUrl`前缀\n  mockUrlPrefix: EMPTY,\n\n  // 全局`mockUrl`后缀\n  mockUrlSuffix: EMPTY,\n\n  // 成功回调\n  process: noop,\n\n  // 私有Promise对象, 如果不想用浏览器原生的Promise对象的话\n  Promise: hasWindow ? window.Promise : NULL,\n\n  // 是否是rest风格\n  rest: FALSE,\n\n  // 默认不执行重试\n  retry: 0,\n\n  query: {},\n\n  // 使用已有的request方法\n  customRequest: NULL,\n\n  // 0表示不启动超时处理\n  timeout: 0,\n\n  // http://zeptojs.com/#$.param\n  traditional: FALSE,\n\n  url: EMPTY,\n\n  // 全局`url`前缀\n  urlPrefix: EMPTY,\n\n  // 是否在`url`上添加辅助开发的标记，如`_api=xxx&_mock=false`\n  urlMark: true,\n\n  // 是否在`url`上添加时间戳，如`_stamp=xxx`，用于避免浏览器的304缓存\n  urlStamp: TRUE,\n\n  // 全局`url`后缀\n  urlSuffix: EMPTY,\n\n  // TODO 文档中没有暴露\n  withCredentials: NULL,\n\n  // 请求之前调用的钩子函数\n  willFetch: noop,\n\n  // 扩展: storage\n  storage: FALSE,\n\n  // 插件，已内置两种\n  // plugins: [\n  //   nattyFetch.plugin.loop\n  //   nattyFetch.plugin.soon\n  // ]\n  plugins: FALSE,\n}\n\nexport default config","import nattyStorage from 'natty-storage'\nimport * as util from './util'\n\nconst {\n  extend, fdAssign, runAsFn, isBoolean,\n  isArray, isFunction, sortPlainObjectKey, isEmptyObject,\n  isPlainObject, dummyPromise,\n  isString, NULL, TRUE, FALSE, hasConsole, makeRandom,\n} = util\n\nimport Request from './request'\nimport ajax from './__AJAX__'\nimport Defer from './defer'\nimport event from './event'\n\n// 内置插件\nimport pluginLoop from './plugin.loop'\nimport pluginSoon from './plugin.soon'\n\n// 全局默认配置\nimport defaultGlobalConfig from './default-global-config'\n\n// 随`setGlobal`方法而变化的运行时全局配置\nlet runtimeGlobalConfig = extend({}, defaultGlobalConfig)\n\nclass API {\n  constructor(path, options, contextConfig, contextId) {\n    this._path = path\n\n    this.contextConfig = contextConfig\n\n    this.contextId = contextId\n\n    // 进行中的请求列队\n    this._pendingList = []\n\n    this.storage = NULL\n\n    const config = this.config = this.processAPIOptions(options)\n\n    // `api`的实现\n    // @param data {Object|Function}\n    // @returns {Object} Promise Object\n    this.api = data => {\n\n      // 处理列队中的请求\n      if (this._pendingList.length) {\n        // 是否忽略自身的并发请求\n        if (config.ignoreSelfConcurrent) {\n          return dummyPromise\n        }\n        // 是否取消上一个请求\n        if (config.overrideSelfConcurrent) {\n          this._pendingList[0].abort()\n        }\n      }\n      const vars = this.makeVars(data)\n\n      if (this.api.storageUseable) {\n        const result = this.api.storage.has(vars.queryString)\n        if (result.has) {\n          return new config.Promise(resolve => {\n            resolve(result.value)\n          })\n        } else {\n          return config.retry === 0 ? this.send(vars) : this.sendWithRetry(vars)\n        }\n      } else {\n        return config.retry === 0 ? this.send(vars) : this.sendWithRetry(vars)\n      }\n    }\n\n    this.api.config = config\n\n    this.api.hasPending = () => {\n      return !!this._pendingList.length\n    }\n\n    // 要删除的方法，这个地方是`v2.3.0`版本之前都存在的设计错误，因为：\n    // io.get().then(...) 发送第一次\n    // io.get().then(...) 发送第二次\n    // io.get.abort()   取消哪一次? 并发情况复杂的业务，结果不明确。\n    // 当前的解决方式是取消所有，不完美\n    this.api.abort = () => {\n      hasConsole && console.warn('`abort` method will be deleted later!')\n      for (let i=0, l=this._pendingList.length; i<l; i++) {\n        this._pendingList[i].abort()\n      }\n    }\n\n    this.initStorage()\n\n    // 启动插件\n    let plugins = isArray(config.plugins) ? config.plugins : []\n\n    for (let i=0, l=plugins.length; i<l; i++) {\n      isFunction(plugins[i]) && plugins[i].call(this, this)\n    }\n  }\n\n  // @param {Object} 一次独立的请求数据\n  makeVars(data) {\n    const {config} = this\n    // 每次请求私有的相关数据\n    const vars = {\n      // `url`中的标记\n      mark: {\n        _api: this._path,\n        _mock: config.mock,\n      },\n      // 此api是定义接口时的多层级命名路径(如：'foo.bar.getList')，不是发起请求时的url地址\n      api: this._path,\n      mock: config.mock,\n      // 上下文id值，如果在调用nattyFetch.context方法时没有指定上下文的名称，默认采用c0，c1\n      contextId: this.contextId,\n    }\n\n    // `data`必须在请求发生时实时创建\n    // 另外，将数据参数存在私有标记中, 方便API的`process`方法内部使用\n    data = ((data||{}).constructor === FormData || (config.data||{}).constructor === FormData) ? fdAssign(runAsFn(config.data), runAsFn(data))\n      : extend({}, runAsFn(config.data), runAsFn(data))\n\n    // 承载请求参数数据\n    vars.data = data\n\n    // 根据`data`创建`storage`查询用的`key`\n    if (this.api.storageUseable) {\n      vars.queryString = isEmptyObject(data) ? 'no-query-string' : JSON.stringify(sortPlainObjectKey(data))\n    }\n\n    return vars\n  }\n\n  // 发送真正的网络请求\n  send(vars) {\n    const {config} = this\n\n    // 每次请求都创建一个请求实例\n    const request = new Request(this)\n\n    this._pendingList.push(request)\n\n    const defer = new Defer(config.Promise)\n\n    request.send({\n      vars,\n      onSuccess: content => {\n        if (this.api.storageUseable) {\n          this.api.storage.set(vars.queryString, content)\n        }\n        defer.resolve(content)\n        event.fire('g.resolve', [content, config], config)\n        event.fire(this.contextId + '.resolve', [content, config], config)\n      },\n      onError: error => {\n        defer.reject(error)\n        event.fire('g.reject', [error, config, vars], config)\n        event.fire(this.contextId + '.reject', [error, config, vars], config)\n      },\n      onComplete: () => {\n        let indexToRemove\n        for (let i=0, l=this._pendingList.length; i<l; i++) {\n          if (this._pendingList[i] === request) {\n            indexToRemove = i\n            break\n          }\n        }\n        indexToRemove !== undefined && this._pendingList.splice(indexToRemove, 1)\n      },\n    })\n\n    return defer.promise\n  }\n\n  sendWithRetry(vars) {\n    const {config} = this\n\n    return new config.Promise((resolve, reject) => {\n\n      let retryTime = 0\n      const sendOneTime = () => {\n        // 更新的重试次数\n        vars.mark._retryTime = retryTime\n        this.send(vars).then(content => {\n          resolve(content)\n        }, error => {\n          if (retryTime === config.retry) {\n            reject(error)\n          } else {\n            retryTime++\n            sendOneTime()\n          }\n        })\n      }\n      sendOneTime()\n    })\n  }\n\n  // 处理API的配置\n  // @param options {Object}\n  processAPIOptions(options) {\n\n    // 插件是不能覆盖的, 应该追加\n    const plugins = [].concat(this.contextConfig.plugins || [], options.plugins || [])\n\n    const config = extend({}, this.contextConfig, options, {\n      plugins,\n    })\n\n    // 按照[boolean, callbackKeyWord, callbackFunctionName]格式处理\n    if (isArray(options.jsonp)) {\n      config.jsonp = isBoolean(options.jsonp[0]) ? options.jsonp[0] : FALSE\n      // 这个参数只用于jsonp\n      if (config.jsonp) {\n        config.jsonpFlag = options.jsonp[1]\n        config.jsonpCallbackName = options.jsonp[2]\n      }\n    }\n\n    // 配置自动增强 如果`url`的值有`.jsonp`结尾 则认为是`jsonp`请求\n    // NOTE jsonp是描述正式接口的 不影响mock接口!!!\n    if (!config.mock && !!config.url.match(/\\.jsonp(\\?.*)?$/)) {\n      config.jsonp = TRUE\n    }\n\n    return config\n  }\n\n  // 初始化缓存对象\n  initStorage() {\n    const {config} = this\n\n    // 简易开启缓存的写法\n    if (config.storage === TRUE) {\n      config.storage = {\n        type: 'variable',\n      }\n    }\n\n    // 综合判断缓存是不是可以启用\n    this.api.storageUseable = isPlainObject(config.storage)\n      && (config.method === 'GET' || config.jsonp)\n      && (\n        nattyStorage.supportStorage\n        && (\n          ['localStorage', 'sessionStorage'].indexOf(config.storage.type) > -1\n          || config.storage.type === 'variable'\n        )\n      )\n\n    // 创建缓存实例\n    if (this.api.storageUseable) {\n      // 当使用`localStorage`时, 强制指定`key`值。如果没指定, 抛错!\n      // 当使用`variable`或`sessionStorage`时, 如果没指定`key`, 则自动生成内部`key`\n      // !!!为什么在使用`localStorage`时必须指定`key`值???\n      // !!!因为当key发生变化时, `localStorage`很容易产生死数据, 必须强制开发者有意识的去维护`key`值\n      if (config.storage.type === 'localStorage') {\n        if (!config.storage.hasOwnProperty('key') || !config.storage.key) {\n          throw new Error('`key` is required when `storage.type` is `localStorage`.')\n        }\n      } else {\n        config.storage.key = config.storage.key || [this.contextId, this._path].join('_')\n      }\n\n      // `key`和`tag`的选择原则:\n      // `key`只选用相对稳定的值, 减少因为`key`的改变而增加的残留缓存\n      // 经常变化的值用于`tag`, 如一个接口在开发过程中可能使用方式不一样, 会在`jsonp`和`get`之间切换。\n      this.api.storage = nattyStorage(extend({}, config.storage, {\n        tag: [\n          config.storage.tag,\n          config.jsonp ? 'jsonp' : config.method,\n          config.url,\n        ].join('_'), // 使用者的`tag`和内部的`tag`, 要同时生效\n      }))\n    }\n  }\n}\n\nconst context = (contextId, options) => {\n  if (isString(contextId)) {\n    options = options || {}\n  } else {\n    options = contextId || {}\n    contextId = 'c' + makeRandom()\n  }\n\n  const storage = nattyStorage({\n    type: 'variable',\n    key: contextId,\n  })\n\n  const ctx = {}\n\n  ctx.api = storage.get()\n\n  ctx._contextId = contextId\n\n  // 插件是不能覆盖的, 应该追加\n  let plugins = [].concat(runtimeGlobalConfig.plugins || [], options.plugins || [])\n\n  ctx._config = extend({}, runtimeGlobalConfig, options, {\n    plugins,\n  })\n\n  // 创建api\n  // @param namespace {String} optional\n  // @param APIs {Object} 该`namespace`下的`api`配置\n  ctx.create = function(namespace, APIs) {\n    let hasNamespace = arguments.length === 2 && isString(namespace)\n\n    if (!hasNamespace) {\n      APIs = namespace\n    }\n\n    for (let path in APIs) {\n      if (APIs.hasOwnProperty(path)) {\n        storage.set(\n          hasNamespace ? namespace + '.' + path : path,\n          new API(\n            hasNamespace ? namespace + '.' + path : path,\n            runAsFn(APIs[path]),\n            ctx._config,\n            contextId\n          ).api\n        )\n      }\n    }\n\n    ctx.api = storage.get()\n  }\n\n  // 绑定上下文事件\n  ctx.on = function(name, fn) {\n    if (!isFunction(fn)) return\n    event.on(ctx._contextId + '.' + name, fn)\n    return ctx\n  }\n\n  return ctx\n}\n\nconst nattyFetch = {}\n\n// 简易接口\n// @param options\nnattyFetch.create = function (options) {\n  return new API('nattyFetch', runAsFn(options), defaultGlobalConfig, 'global').api\n}\n\nextend(nattyFetch, {\n  onlyForModern: !__FALLBACK__, // eslint-disable-line\n  version: '__VERSION__',\n  _util: util,\n  _event: event,\n  _ajax: ajax,\n  context,\n\n  // 执行全局配置\n  // @param options\n  setGlobal(options) {\n    runtimeGlobalConfig = extend({}, defaultGlobalConfig, options)\n    return this\n  },\n\n  // 获取全局配置\n  // @param property {String} optional\n  // @returns {*}\n  getGlobal(property) {\n    return property ? runtimeGlobalConfig[property] : runtimeGlobalConfig\n  },\n\n  // 绑定全局事件\n  on(name, fn) {\n    if (!isFunction(fn)) return\n    event.on('g.' + name, fn)\n    return this\n  },\n\n  // 插件名称空间\n  plugin: {\n    loop: pluginLoop,\n    soon: pluginSoon,\n  },\n})\n\n// 内部直接将运行时的全局配置初始化到默认值\nnattyFetch.setGlobal(defaultGlobalConfig)\n\nexport default nattyFetch"],"names":["noop","v","redo","fn","let","args","arguments","ret","i","l","length","isAbsoluteUrl","url","match","absoluteUrlReg","isRelativeUrl","relativeUrlReg","isBoolean","BOOLEAN","isString","STRING","isFunction","FUNCTION","runAsFn","isNumber","isNaN","NUMBER","isObject","OBJECT","NULL","isWindow","window","isPlainObject","Object","getPrototypeOf","prototype","isEmptyObject","count","hasOwnProperty","isArray","toString","call","ARRAY_TYPE","isCrossDomain","requestA","doc","createElement","href","originA","hostname","port","protocol","_extend","receiver","supplier","deepCopy","FALSE","key","undefined","TRUE","concat","extend","_fdAssign","fd1","fd2","formData","FormData","loop","fd","constructor","iterator","entries","s","next","done","set","value","each","sortPlainObjectKey","obj","clone","keyArray","push","sort","serialize","params","traditional","scope","type","array","hash","OBJECT_TYPE","add","name","param","escape","join","replace","decodeParam","str","decodeURIComponent","appendQueryString","urlStamp","Date","queryString","indexOf","makeRandom","n","chars","charAt","Math","floor","random","makeMessage","log","hasConsole","console","JSON","stringify","ajax","options","defaultOptions","isCD","xhr","XMLHttpRequest","setEvents","open","method","urlMark","mark","GET","data","query","withCredentials","const","header","setHeaders","send","originAbort","abort","_aborted","jsonp","script","callbackName","originComplete","complete","removeScript","win","success","flag","insertScript","rename","PREFIX","hasWindow","document","encodeURIComponent","UNDEFINED","EMPTY","dummyPromise","dummy","then","isIE","ActiveXObject","location","fdAssign","supportCORS","SCRIPT","XML","JS0N","acceptToRequestHeader","*","json","xml","html","text","Accept","accept","setRequestHeader","_finished","readyStateChangeFn","readyState","status","responseText","parse","e","warn","eval","responseXML","error","addEventListener","abortFn","loadedFn","fallback","onerror","parentNode","removeChild","head","src","async","crossOrigin","getElementsByTagName","insertBefore","firstChild","Request","apiInstance","_path","config","api","contextId","this","_apiInstance","_rid","storage","pending","_requester","ref","vars","onSuccess","onError","onComplete","willFetch","customRequest","isSuccess","response","processResponse","requester","timeout","setTimeout","this$1","message","context","didFetch","fit","content","process","getFinalUrl","mock","mockUrl","prefixKey","suffixKey","prefix","suffix","rest","restData","RegExp","jsonpFlag","jsonpCallbackName","jsonpCrossOrigin","Defer","Promise","t","promise","resolve","reject","_resolve","_reject","reason","on","off","fns","splice","fire","apply","hasEvent","resolveFn","rejectFn","duration","Error","loopTimer","stop","clearTimeout","looping","sleepAndRequest","soon","successFn","errorFn","makeVars","storageUseable","result","has","fromStorage","ignoreSelfConcurrent","mockUrlPrefix","mockUrlSuffix","retry","urlPrefix","urlSuffix","plugins","runtimeGlobalConfig","defaultGlobalConfig","API","path","contextConfig","_pendingList","processAPIOptions","overrideSelfConcurrent","sendWithRetry","hasPending","initStorage","_api","_mock","request","defer","event","indexToRemove","retryTime","sendOneTime","_retryTime","nattyStorage","supportStorage","tag","ctx","get","_contextId","_config","create","namespace","APIs","hasNamespace","nattyFetch","onlyForModern","version","_util","util","_event","_ajax","setGlobal","getGlobal","property","plugin","pluginLoop","pluginSoon"],"mappings":"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"}